import { OnInit, EventEmitter } from '@angular/core';
export declare class DatePickerDirectiveComponent implements OnInit {
    _mindate: any;
    minDate: any;
    _maxdate: any;
    maxDate: any;
    singleDatePicker?: boolean;
    linkedCalendars: boolean;
    _startDate: any;
    startDate: any;
    _endDate: any;
    endDate: any;
    monthNames: string[];
    tmpDate: any;
    tmpEndDate: any;
    leftCalendar: any;
    rightCalendar: any;
    ranges: any[];
    days: any;
    displayStartDate: string;
    displayEndDate: string;
    focusedInput: string;
    close: EventEmitter<{}>;
    dateSelected: EventEmitter<{}>;
    constructor();
    ngOnInit(): void;
    getYesterday(): Date;
    getPast7Days(): Date;
    getPast30Days(): Date;
    getFirstDay(): Date;
    getFirstDayPrev(): Date;
    getLastDayPrev(): Date;
    daysInMonth(month: any, year: any): number;
    getLastMonth(date: any): Date;
    getNextMonth(date: any): Date;
    getMonthYear(date: any): string;
    isBefore(d1: any, d2: any): boolean;
    isAfter(d1: any, d2: any): boolean;
    renderCalendar(side: string): void;
    isToday(day: any): boolean;
    isActiveDate(day: any): boolean;
    isStartDate(day: any): boolean;
    isEndDate(day: any): boolean;
    isDisabled(day: any): boolean;
    isInRange(day: any): boolean;
    nextAvailable(): boolean;
    prevAvailable(): boolean;
    notActiveMonth(day: any, side: any): boolean;
    getMonth(side: any): string;
    clickPrev(): void;
    clickNext(): void;
    clickdate(day: any, side: any): boolean;
    rangeClick(range: any): void;
    rangeHover(range: any): void;
    hoverExit(): void;
    hoverdate(day: any): boolean;
    inputFocus(side: any): void;
    inputBlur(side: any): void;
    inputChanged(event: any, side: any): boolean;
    updateView(): void;
    setStartDate(startDate: any): void;
    setEndDate(endDate: any): void;
    applyClick(): void;
    cancelClick(): void;
}
